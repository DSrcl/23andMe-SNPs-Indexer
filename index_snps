#!/usr/bin/env python
from argparse import ArgumentParser
from pysam import tabix_index

CHROM_IDX = 2
POS_IDX = 3 

def chrom_to_int(chrom):
    if chrom == 'MT':
        return 0
    elif chrom == 'X':
        return 23
    elif chrom == 'Y':
        return 24
    else:
        return int(chrom)


def sort_snps(src):
    rows = (row.strip().split() for row in src if not row.startswith('#') and not row[0].isalpha())
    snps = [row for row in rows if '' not in row and len(row) == 4]
    snps.sort(key=lambda snp: (chrom_to_int(snp[CHROM_IDX]), int(snp[POS_IDX])))
    return snps


def main(args):
    print 'Begin sorting snps.'
    snps = sort_snps(open(args.input)) 
    print 'Finishing sorting.'
    with open(args.output, 'w') as out:
        for snp in snps:
            out.write('\t'.join(snp)+'\n') 
    print 'Begin indexing.'
    # index here
    tabix_index(args.output, force=True, seq_col=CHROM_IDX, start_col=POS_IDX, end_col=POS_IDX) 
    print 'Done.'


if __name__ == '__main__':
    arg_parser = ArgumentParser()
    arg_parser.add_argument('input', help='input snps file from 23andme')
    arg_parser.add_argument('output', help='name of the sorted file')
    main(arg_parser.parse_args())
